package sw;
import java.net.Socket;
import java.io.*;


public class ServerThread extends Thread{

	Socket myConnection;
	ObjectOutputStream out;
	ObjectInputStream in;
	String message;
	String message1;
	String message2;
	String message3;
	Clients clients;
	Client client;
	
	public ServerThread(Socket socket, Clients clients)
	{
		myConnection = socket;
		this.clients = clients;
	}
	
	public void run()
	{
		try
		{
			out = new ObjectOutputStream(myConnection.getOutputStream());
			out.flush();
			in = new ObjectInputStream(myConnection.getInputStream());
		
			//Server Comms
			do
			{
				boolean clientLogged = (client != null ? true : false);
			
				sendMessage(clientLogged ? "User Logged" : "User Not Logged");
			
				if(!clientLogged) {
					sendMessage("Option 1: Register System");
					sendMessage("Option 2: Log-in to the online banking system");
				}
					
					
				if(clientLogged) {
					sendMessage("Option 1: Lodge money to your account");
					sendMessage("Option 2: Retrieve all registered clients listing");
					sendMessage("Option 3: Transfer money to another account");
					sendMessage("Option 4: View all transaction on your bank account");
					sendMessage("Option 5: Update your password");
					sendMessage("Option 6: Log-out");	
				}
					
				sendMessage("Option 0: Exit");
				
				sendMessage("Select your option:");
				message = (String)in.readObject();
			
				if(!clientLogged) {
					if(message.equalsIgnoreCase("1")) {
						sendMessage("Enter your Name:");
						String name = (String)in.readObject();
						sendMessage("Enter your email:");
						String email = (String)in.readObject();
						sendMessage("Enter your password:");
						String pw = (String)in.readObject();
						sendMessage("Enter your address:");
						String address = (String)in.readObject();
						sendMessage("Enter your ppsNumber:");
						String pps = (String)in.readObject();
						
						String isAdded = clients.addUser(name, pps, email, pw, address);
						sendMessage(isAdded);	
	
					}else if(message.equalsIgnoreCase("2")) {
						sendMessage("Enter your Email:");
						String email = (String)in.readObject();
						sendMessage("Enter your PPS Number:");
						String PPSNumber = (String)in.readObject();
						sendMessage("Enter your password:");
						String pass = (String)in.readObject();
						
						client = clients.checkLogin(email, pass, PPSNumber);
						sendMessage(client != null ? "Success" : "400");
					}
				}
				
				if(clientLogged) {			
					if(message.equalsIgnoreCase("1")) {
						sendMessage("Enter the money:");
						double money = Double.parseDouble((String)in.readObject());
						boolean isUpdated = client.setBalance(money , false, clients);
						sendMessage(isUpdated ? "Success" : "400");
					}
					else if(message.equalsIgnoreCase("2")) {
						sendMessage("[The clients registered]");
						sendMessage(clients.toString());
					}
					else if(message.equalsIgnoreCase("3")) {
						sendMessage("Enter Email:");
						String email = (String)in.readObject();
						sendMessage("Enter PPS Number:");
						String pps = (String)in.readObject();
						Client c = clients.checkUser(client, email, pps);
						if(c != null) {
							sendMessage("Success");
							sendMessage("Enter the money:");
							double moneySend = Double.parseDouble((String)in.readObject());
							boolean isChangedOn = client.setBalance(-moneySend , true, clients);
							boolean isUpdated = c.setBalance(moneySend , false, clients);
							sendMessage(isChangedOn && isUpdated ? "Success" : "400");
						}else {
							sendMessage("400");
						}
					}
					else if(message.equalsIgnoreCase("4")) {
						sendMessage("Your Transactions:");
						sendMessage(client.getTransacctions());
					}
					
					else if(message.equalsIgnoreCase("5")) {
						sendMessage("Enter your new password: ");
						String password = (String)in.readObject();
						boolean isUpdated = client.setPassword(password, clients);
						sendMessage(isUpdated ? "Success" : "400");
					}
					
					else if(message.equalsIgnoreCase("6")) {
						client = null;
						sendMessage(client == null ? "Success" : "400");
					}
				}
				
			}while(!message.equalsIgnoreCase("0"));
			sendMessage("User Disconnected");
			in.close();
			out.close();
		}
		catch(ClassNotFoundException classnot)
		{
					System.err.println("Data received in unknown format");
		}
		catch(IOException e)
		{
			
		}
		
		
	}
	
	void sendMessage(String msg)
	{
		try{
			out.writeObject(msg);
			out.flush();
			System.out.println("server>" + msg);
		}
		catch(IOException ioException){
			ioException.printStackTrace();
		}
	}
	
}
