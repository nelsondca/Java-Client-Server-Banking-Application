package sw;

import java.io.*;
import java.net.*;
import java.util.Scanner;
public class Requester{
	Socket requestSocket;
	ObjectOutputStream out;
 	ObjectInputStream in;
 	String userLogged;
 	String message;
 	String response;
 	Scanner input;
	Requester(){
		
		input = new Scanner(System.in);
	}
	void run()
	{
		try{
			//1. creating a socket to connect to the server
			
			requestSocket = new Socket("127.0.0.1", 3000);
			System.out.println("Connected to localhost");
			//2. get Input and Output streams
			out = new ObjectOutputStream(requestSocket.getOutputStream());
			out.flush();
			in = new ObjectInputStream(requestSocket.getInputStream());
			//3: Communicating with the server
			
			
			//Client Comms
			try 
			{
				do
				{
					
					userLogged = (String)in.readObject();

					if(userLogged.equalsIgnoreCase("User Not Logged"))
					{
						message = (String)in.readObject();
						System.out.println(message);
						message = (String)in.readObject();
						System.out.println(message);
					}
					
					if(userLogged.equalsIgnoreCase("User Logged"))
					{
						message = (String)in.readObject();
						System.out.println(message);
						message = (String)in.readObject();
						System.out.println(message);
						message = (String)in.readObject();
						System.out.println(message);
						message = (String)in.readObject();
						System.out.println(message);
						message = (String)in.readObject();
						System.out.println(message);
						message = (String)in.readObject();
						System.out.println(message);
					}
					
					message = (String)in.readObject();
					System.out.println(message);
					
					message = (String)in.readObject();
					System.out.println(message);
					
					response = input.next();
					sendMessage(response);
					
					if(userLogged.equalsIgnoreCase("User Not Logged")) {
						if(response.equalsIgnoreCase("1"))
						{
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							if(message.equalsIgnoreCase("200"))
							{
								System.out.println("Registered successfully");
							}else {
								System.out.println("Already registered in the system");
							}
						}else if(response.equalsIgnoreCase("2")) {
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							if(message.equalsIgnoreCase("200"))
							{
								System.out.println("Log-In with success");
							}else {
								System.out.println("Wrong Credentials");
							}
						}	
					}
					
					if(userLogged.equalsIgnoreCase("User Logged")) {
						if(response.equalsIgnoreCase("1")) {
							message = (String)in.readObject();
							System.out.println(message);
							
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							if(message.equalsIgnoreCase("200"))
							{
								System.out.println("Balance Updated");
							}else {
								System.out.println("Incorrect amount");
							}
						}	
						else if(response.equalsIgnoreCase("2")) {
							message = (String)in.readObject();
							System.out.println(message);
							
							message = (String)in.readObject();
							System.out.println(message);
						}	
						else if(response.equalsIgnoreCase("3")) {
							message = (String)in.readObject();
							System.out.println(message);
							
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							System.out.println(message);
							
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							if(message.equalsIgnoreCase("200")) {
								
								message = (String)in.readObject();
								System.out.println(message);
								
								response = input.next();
								sendMessage(response);
								
								message = (String)in.readObject();
								if(message.equalsIgnoreCase("200"))
								{
									System.out.println("Funds transfered with success");
								}else {
									System.out.println("Error transfering funds");
								}
							}else {
								System.out.println("Wrong user");
							}
						}
						else if(response.equalsIgnoreCase("4")) {
							message = (String)in.readObject();
							System.out.println(message);						
							message = (String)in.readObject();
							System.out.println(message);
						}
						else if(response.equalsIgnoreCase("5")) {
							message = (String)in.readObject();
							System.out.println(message);
							response = input.next();
							sendMessage(response);
							
							message = (String)in.readObject();
							if(message.equalsIgnoreCase("200"))
							{
								System.out.println("Password changed");
							}else {
								System.out.println("Error changing password");
							}
						}
						else if(response.equalsIgnoreCase("6")) {
							
							message = (String)in.readObject();
							if(message.equalsIgnoreCase("200"))
							{
								System.out.println("Logged out");
							}else {
								System.out.println("Error logging out");
							}
						}	
					}					
				}while(!message.equalsIgnoreCase("0"));
			} 

			catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			
			
		}
		catch(UnknownHostException unknownHost){
			System.err.println("You are trying to connect to an unknown host!");
		}
		catch(IOException ioException){
			ioException.printStackTrace();
		}
		finally{
			//4: Closing connection
			try{
				in.close();
				out.close();
				requestSocket.close();
			}
			catch(IOException ioException){
				ioException.printStackTrace();
			}
		}
	}
	void sendMessage(String msg)
	{
		try{
			out.writeObject(msg);
			out.flush();
			System.out.println("Clientside - " + msg);
		}
		catch(IOException ioException){
			ioException.printStackTrace();
		}
	}
	public static void main(String args[])
	{
		Requester client = new Requester();
		client.run();
	}
}