package sw;

import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

public class Client implements Serializable {
	
	private String name;
	private String ppsNumber;
	private String email;
	private String password;
	private String address;
	private double balance;
	private List<String> transacctions;
	
	public Client(String name, String ppsNumber, String email, String password, String address) {
		this.name = name;
		this.ppsNumber = ppsNumber;
		this.email = email;
		this.password = password;
		this.address = address;
		balance = 0;
		transacctions = new ArrayList<String>();
	}

	public Client() {
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public String getPpsNumber() {
		return ppsNumber;
	}

	public void setPpsNumber(String ppsNumber) {
		this.ppsNumber = ppsNumber;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPassword() {
		return password;
	}

	public boolean setPassword(String password, Clients users) {
		boolean result = false;
		if(password.length() > 0) {
			this.password = password;
			result = true;
			
			saveUsersToFile(users);
		}
		
		
		
		return result;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public double getBalance() {
		return balance;
	}

	public boolean setBalance(double balance, boolean isNegative, Clients users) {
		boolean result = false;
		double newBalance = getBalance() + balance;
		
		if(((balance > 0.0 && !isNegative) || (balance < 0.0 && isNegative)) && newBalance >= 0) {
			
			this.balance = newBalance;
			
			setTransacctions("ID: " + this.ppsNumber + " Deposit " + balance + " Current balance " + this.balance);
			saveUsersToFile(users);
			result = true;	
		}
		return result;
	}
	

	public String getTransacctions() {
		String result = "";
		for (String transacction : transacctions) {
			result += transacction+"\n";
		}
		return result;
	}

	public void setTransacctions(String transacction) {
		transacctions.add(transacction);
		saveTransactionsToFile();
		
	}
	
	private void saveTransactionsToFile() {
	    try (ObjectOutputStream transactionStream = new ObjectOutputStream(new FileOutputStream("TransactionData.txt"))) {
	        transactionStream.writeObject(transacctions);
	    } catch (IOException ioException) {
	        System.err.println("Error saving transactions: " + ioException.getMessage());
	        ioException.printStackTrace();
	    }
	}

	private void saveUsersToFile(Clients clientData) {
	    try (ObjectOutputStream userStream = new ObjectOutputStream(new FileOutputStream("UserData.txt"))) {
	        userStream.writeObject(clientData);
	    } catch (IOException ioException) {
	        System.err.println("Error saving user data: " + ioException.getMessage());
	        ioException.printStackTrace();
	    }
	}

	

	@Override
	public boolean equals(Object obj) {
		Client user = (Client)obj;
		return this.getEmail().equalsIgnoreCase(user.getEmail()) || this.getPpsNumber().equalsIgnoreCase(user.getPpsNumber());
	}

	@Override
	public String toString() {
		return name + "  ID: " + ppsNumber + "Email: " + email;
	}
	
	
	
}
